{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"ooo\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_l_geo_json = _resolveComponent(\"l-geo-json\");\n\n  const _component_l_map = _resolveComponent(\"l-map\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_l_map, {\n    style: {\n      \"height\": \"50vh\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_l_geo_json, {\n      geojson: $data.geojson,\n      options: $data.geojsonOptions\n    }, null, 8\n    /* PROPS */\n    , [\"geojson\", \"options\"])]),\n    _: 1\n    /* STABLE */\n\n  }), _hoisted_1]);\n}","map":{"version":3,"mappings":";;gCAKEA,oBAAU,GAAV,EAAU,IAAV,EAAG,KAAH,EAAM;AAAA;AAAN;;;;;;;uBAJFC,oBAKM,KALN,EAKM,IALN,EAKM,CAJJC,aAEQC,gBAFR,EAEQ;AAFDC,SAAmB,EAAnB;AAAA;AAAA;AAEC,GAFR,EAA0B;sBACxB,MAA2D,CAA3DF,aAA2DG,qBAA3D,EAA2D;AAA9CC,aAAO,EAAEC,aAAqC;AAA3BC,aAAO,EAAED;AAAkB,KAA3D;;AAAA,6BAA2D,EADnC;;;;AAAA,GAA1B,CAII,EADJE,UACI,CALN","names":["_createElementVNode","_createElementBlock","_createVNode","_component_l_map","style","_component_l_geo_json","geojson","$data","options","_hoisted_1"],"sourceRoot":"","sources":["/Users/louis/Documents/GitHub/projet-web/vuejs3-projetweb/src/components/ChangerMdp.vue"],"sourcesContent":["<template>\n<div>\n  <l-map style=\"height:50vh\">\n    <l-geo-json :geojson=\"geojson\" :options=\"geojsonOptions\" />\n  </l-map>\n  <p>ooo</p>\n</div>\n</template>\n\n<script>\n// DON'T load Leaflet components here!\n// Its CSS is needed though, if not imported elsewhere in your application.\nimport \"leaflet/dist/leaflet.css\"\nimport { LMap, LGeoJson } from \"@vue-leaflet/vue-leaflet\";\n\nexport default {\n  components: {\n    LMap,\n    LGeoJson,\n  },\n  data() {\n    return {\n      geojson: {\n        type: \"FeatureCollection\",\n        features: [\n          // ...\n        ],\n      },\n      geojsonOptions: {\n        // Options that don't rely on Leaflet methods.\n      },\n    };\n  },\n  async beforeMount() {\n    // HERE is where to load Leaflet components!\n    const { circleMarker } = await import(\"leaflet/dist/leaflet-src.esm\");\n\n    // And now the Leaflet circleMarker function can be used by the options:\n    this.geojsonOptions.pointToLayer = (feature, latLng) =>\n      circleMarker(latLng, { radius: 8 });\n    this.mapIsReady = true;\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}