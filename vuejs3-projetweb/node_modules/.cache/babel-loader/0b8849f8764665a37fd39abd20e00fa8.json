{"ast":null,"code":"export default {\n  name: \"InscriptionPage\",\n  components: {},\n\n  data() {\n    return {\n      form: {\n        mail: \"\",\n        mdp: \"\",\n        isConnected: false\n      }\n    };\n  },\n\n  methods: {\n    connectUser() {\n      const xmlHttpRequest = new XMLHttpRequest();\n      xmlHttpRequest.open(\"POST\", \"http://10.57.29.14:8080/login\", true);\n      xmlHttpRequest.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n      xmlHttpRequest.send(`email=${this.form.mail}&password=${this.form.mdp}`);\n\n      xmlHttpRequest.onload = () => {\n        // console.log(JSON.parse(xmlHttpRequest.responseText));\n        if (!xmlHttpRequest.responseText) return;\n        console.log(this.$isConnected);\n        console.log(this.$user);\n        this.$isConnected = true;\n        this.$user = JSON.parse(xmlHttpRequest.responseText);\n        console.log(this.$user);\n        console.log(this.$isConnected); // return {\n        //   isConnected: true,\n        //   user: this.$user,\n        // };\n\n        return [this.$user, this.$isConnected];\n      };\n    }\n\n  },\n  computed: {}\n};","map":{"version":3,"mappings":"AAkBA,eAAe;AACbA,MAAI,EAAE,iBADO;AAEbC,YAAU,EAAE,EAFC;;AAGbC,MAAI,GAAG;AACL,WAAO;AACLC,UAAI,EAAE;AACJC,YAAI,EAAE,EADF;AAEJC,WAAG,EAAE,EAFD;AAGJC,mBAAW,EAAE;AAHT;AADD,KAAP;AAOD,GAXY;;AAabC,SAAO,EAAE;AACPC,eAAW,GAAG;AACZ,YAAMC,cAAa,GAAI,IAAIC,cAAJ,EAAvB;AACAD,oBAAc,CAACE,IAAf,CAAoB,MAApB,EAA4B,+BAA5B,EAA6D,IAA7D;AACAF,oBAAc,CAACG,gBAAf,CACE,cADF,EAEE,mCAFF;AAIAH,oBAAc,CAACI,IAAf,CAAqB,SAAQ,KAAKV,IAAL,CAAUC,IAAK,aAAY,KAAKD,IAAL,CAAUE,GAAI,EAAtE;;AAEAI,oBAAc,CAACK,MAAf,GAAwB,MAAM;AAC5B;AACA,YAAI,CAACL,cAAc,CAACM,YAApB,EAAkC;AAClCC,eAAO,CAACC,GAAR,CAAY,KAAKC,YAAjB;AACAF,eAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;AACA,aAAKD,YAAL,GAAoB,IAApB;AACA,aAAKC,KAAL,GAAaC,IAAI,CAACC,KAAL,CAAWZ,cAAc,CAACM,YAA1B,CAAb;AACAC,eAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;AACAH,eAAO,CAACC,GAAR,CAAY,KAAKC,YAAjB,EAR4B,CAS1B;AACA;AACA;AACA;;AACA,eAAM,CAAC,KAAKC,KAAN,EAAc,KAAKD,YAAnB,CAAN;AACF,OAdF;AAgBD;;AA1BM,GAbI;AA2CbI,UAAQ,EAAE;AA3CG,CAAf","names":["name","components","data","form","mail","mdp","isConnected","methods","connectUser","xmlHttpRequest","XMLHttpRequest","open","setRequestHeader","send","onload","responseText","console","log","$isConnected","$user","JSON","parse","computed"],"sourceRoot":"","sources":["/Users/louis/Documents/GitHub/projet-web/vuejs3-projetweb/src/views/Connexion.vue"],"sourcesContent":["<template>\n  <div class=\"field\">\n    <div class=\"control\">\n      <label class=\"label\">Votre mail</label>\n      <input class=\"textarea\" placeholder=\"Email\" v-model=\"this.form.mail\" />\n      <label class=\"label\">Votre mot de passe</label>\n      <input\n        type=\"password\"\n        class=\"textarea\"\n        placeholder=\"Mot de passe\"\n        v-model=\"this.form.mdp\"\n      />\n      <button @click=\"connectUser()\" type=\"submit\" class=\"btn\">Envoyer</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"InscriptionPage\",\n  components: {},\n  data() {\n    return {\n      form: {\n        mail: \"\",\n        mdp: \"\",\n        isConnected: false,\n      },\n    };\n  },\n\n  methods: {\n    connectUser() {\n      const xmlHttpRequest = new XMLHttpRequest();\n      xmlHttpRequest.open(\"POST\", \"http://10.57.29.14:8080/login\", true);\n      xmlHttpRequest.setRequestHeader(\n        \"Content-Type\",\n        \"application/x-www-form-urlencoded\"\n      );\n      xmlHttpRequest.send(`email=${this.form.mail}&password=${this.form.mdp}`);\n\n      xmlHttpRequest.onload = () => {\n        // console.log(JSON.parse(xmlHttpRequest.responseText));\n        if (!xmlHttpRequest.responseText) return\n        console.log(this.$isConnected)\n        console.log(this.$user)\n        this.$isConnected = true;\n        this.$user = JSON.parse(xmlHttpRequest.responseText);\n        console.log(this.$user);\n        console.log(this.$isConnected)\n          // return {\n          //   isConnected: true,\n          //   user: this.$user,\n          // };\n          return[this.$user , this.$isConnected]\n        }\n        \n    },\n    \n  },\n\n  computed: {},\n};\n</script>\n\n<style scoped>\nbody {\n  /* column center */\n  display: flex;\n  flex-direction: column;\n}\n.field {\n  text-align: center;\n  align-content: center;\n  border-radius: 1em;\n  background-color: #e4e4e4d5;\n  margin: 20px;\n  padding: 20px;\n}\n.control {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  background-color: whitesmoke;\n  padding: 10px;\n  border-radius: 15px;\n  box-sizing: border-box;\n  box-shadow: 0px 10px 50px -10px white;\n}\n.textarea {\n  width: 50%;\n  padding: 0.5em;\n  margin: 1rem;\n  resize: none;\n  border-radius: 0.5rem;\n  overflow: hidden;\n  text-align: center;\n  border: gray solid;\n}\n.btn {\n  background-color: #76a0c7;\n  color: #fff;\n  padding: 10px;\n  border-radius: 1em;\n  margin: 10px;\n  cursor: pointer;\n}\n.btn:hover {\n  transform: translateY(-5px);\n}\n.textarea:hover {\n  border-bottom: 2px solid #272f40;\n}\n</style>"]},"metadata":{},"sourceType":"module"}