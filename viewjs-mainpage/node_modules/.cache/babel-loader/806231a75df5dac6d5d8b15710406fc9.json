{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _bindProps = require('../utils/bindProps.js');\n\nvar _simulateArrowDown = require('../utils/simulateArrowDown.js');\n\nvar _simulateArrowDown2 = _interopRequireDefault(_simulateArrowDown);\n\nvar _mapElementFactory = require('./mapElementFactory');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar mappedProps = {\n  bounds: {\n    type: Object\n  },\n  componentRestrictions: {\n    type: Object,\n    // Do not bind -- must check for undefined\n    // in the property\n    noBind: true\n  },\n  types: {\n    type: Array,\n    default: function _default() {\n      return [];\n    }\n  }\n};\nvar props = {\n  selectFirstOnEnter: {\n    required: false,\n    type: Boolean,\n    default: false\n  },\n  options: {\n    type: Object\n  }\n};\nexports.default = {\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$gmapApiPromiseLazy().then(function () {\n      if (_this.selectFirstOnEnter) {\n        (0, _simulateArrowDown2.default)(_this.$refs.input);\n      }\n\n      if (typeof google.maps.places.Autocomplete !== 'function') {\n        throw new Error('google.maps.places.Autocomplete is undefined. Did you add \\'places\\' to libraries when loading Google Maps?');\n      }\n      /* eslint-disable no-unused-vars */\n\n\n      var finalOptions = _extends({}, (0, _bindProps.getPropsValues)(_this, mappedProps), _this.options);\n\n      _this.$autocomplete = new google.maps.places.Autocomplete(_this.$refs.input, finalOptions);\n      (0, _bindProps.bindProps)(_this, _this.$autocomplete, mappedProps);\n\n      _this.$watch('componentRestrictions', function (v) {\n        if (v !== undefined) {\n          _this.$autocomplete.setComponentRestrictions(v);\n        }\n      }); // Not using `bindEvents` because we also want\n      // to return the result of `getPlace()`\n\n\n      _this.$autocomplete.addListener('place_changed', function () {\n        _this.$emit('place_changed', _this.$autocomplete.getPlace());\n      });\n    });\n  },\n  props: _extends({}, (0, _mapElementFactory.mappedPropsToVueProps)(mappedProps), props)\n};","map":{"version":3,"sources":["/Users/thomas/Documents/GitHub/projet-web/node_modules/vue2-google-maps/dist/components/autocompleteImpl.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_bindProps","require","_simulateArrowDown","_simulateArrowDown2","_interopRequireDefault","_mapElementFactory","obj","__esModule","default","mappedProps","bounds","type","componentRestrictions","noBind","types","Array","_default","props","selectFirstOnEnter","required","Boolean","options","mounted","_this","$gmapApiPromiseLazy","then","$refs","input","google","maps","places","Autocomplete","Error","finalOptions","getPropsValues","$autocomplete","bindProps","$watch","v","undefined","setComponentRestrictions","addListener","$emit","getPlace","mappedPropsToVueProps"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _bindProps = require('../utils/bindProps.js');\n\nvar _simulateArrowDown = require('../utils/simulateArrowDown.js');\n\nvar _simulateArrowDown2 = _interopRequireDefault(_simulateArrowDown);\n\nvar _mapElementFactory = require('./mapElementFactory');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar mappedProps = {\n  bounds: {\n    type: Object\n  },\n  componentRestrictions: {\n    type: Object,\n    // Do not bind -- must check for undefined\n    // in the property\n    noBind: true\n  },\n  types: {\n    type: Array,\n    default: function _default() {\n      return [];\n    }\n  }\n};\n\nvar props = {\n  selectFirstOnEnter: {\n    required: false,\n    type: Boolean,\n    default: false\n  },\n  options: {\n    type: Object\n  }\n};\n\nexports.default = {\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$gmapApiPromiseLazy().then(function () {\n      if (_this.selectFirstOnEnter) {\n        (0, _simulateArrowDown2.default)(_this.$refs.input);\n      }\n\n      if (typeof google.maps.places.Autocomplete !== 'function') {\n        throw new Error('google.maps.places.Autocomplete is undefined. Did you add \\'places\\' to libraries when loading Google Maps?');\n      }\n\n      /* eslint-disable no-unused-vars */\n      var finalOptions = _extends({}, (0, _bindProps.getPropsValues)(_this, mappedProps), _this.options);\n\n      _this.$autocomplete = new google.maps.places.Autocomplete(_this.$refs.input, finalOptions);\n      (0, _bindProps.bindProps)(_this, _this.$autocomplete, mappedProps);\n\n      _this.$watch('componentRestrictions', function (v) {\n        if (v !== undefined) {\n          _this.$autocomplete.setComponentRestrictions(v);\n        }\n      });\n\n      // Not using `bindEvents` because we also want\n      // to return the result of `getPlace()`\n      _this.$autocomplete.addListener('place_changed', function () {\n        _this.$emit('place_changed', _this.$autocomplete.getPlace());\n      });\n    });\n  },\n\n  props: _extends({}, (0, _mapElementFactory.mappedPropsToVueProps)(mappedProps), props)\n};"]},"metadata":{},"sourceType":"script"}