{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreetViewPanorama = exports.MountableMixin = exports.Autocomplete = exports.MapElementFactory = exports.MapElementMixin = exports.PlaceInput = exports.Map = exports.InfoWindow = exports.Rectangle = exports.Cluster = exports.Circle = exports.Polygon = exports.Polyline = exports.Marker = exports.loadGmapApi = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // Vue component imports\n\n\nexports.install = install;\nexports.gmapApi = gmapApi;\n\nvar _lazyValue = require('./utils/lazyValue');\n\nvar _lazyValue2 = _interopRequireDefault(_lazyValue);\n\nvar _manager = require('./manager');\n\nvar _marker = require('./components/marker');\n\nvar _marker2 = _interopRequireDefault(_marker);\n\nvar _polyline = require('./components/polyline');\n\nvar _polyline2 = _interopRequireDefault(_polyline);\n\nvar _polygon = require('./components/polygon');\n\nvar _polygon2 = _interopRequireDefault(_polygon);\n\nvar _circle = require('./components/circle');\n\nvar _circle2 = _interopRequireDefault(_circle);\n\nvar _rectangle = require('./components/rectangle');\n\nvar _rectangle2 = _interopRequireDefault(_rectangle);\n\nvar _infoWindow = require('./components/infoWindow.vue');\n\nvar _infoWindow2 = _interopRequireDefault(_infoWindow);\n\nvar _map = require('./components/map.vue');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _streetViewPanorama = require('./components/streetViewPanorama.vue');\n\nvar _streetViewPanorama2 = _interopRequireDefault(_streetViewPanorama);\n\nvar _placeInput = require('./components/placeInput.vue');\n\nvar _placeInput2 = _interopRequireDefault(_placeInput);\n\nvar _autocomplete = require('./components/autocomplete.vue');\n\nvar _autocomplete2 = _interopRequireDefault(_autocomplete);\n\nvar _mapElementMixin = require('./components/mapElementMixin');\n\nvar _mapElementMixin2 = _interopRequireDefault(_mapElementMixin);\n\nvar _mapElementFactory = require('./components/mapElementFactory');\n\nvar _mapElementFactory2 = _interopRequireDefault(_mapElementFactory);\n\nvar _mountableMixin = require('./utils/mountableMixin');\n\nvar _mountableMixin2 = _interopRequireDefault(_mountableMixin);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // HACK: Cluster should be loaded conditionally\n// However in the web version, it's not possible to write\n// `import 'vue2-google-maps/src/components/cluster'`, so we need to\n// import it anyway (but we don't have to register it)\n// Therefore we use babel-plugin-transform-inline-environment-variables to\n// set BUILD_DEV to truthy / falsy\n\n\nvar Cluster = undefined;\nvar GmapApi = null; // export everything\n\nexports.loadGmapApi = _manager.loadGmapApi;\nexports.Marker = _marker2.default;\nexports.Polyline = _polyline2.default;\nexports.Polygon = _polygon2.default;\nexports.Circle = _circle2.default;\nexports.Cluster = Cluster;\nexports.Rectangle = _rectangle2.default;\nexports.InfoWindow = _infoWindow2.default;\nexports.Map = _map2.default;\nexports.PlaceInput = _placeInput2.default;\nexports.MapElementMixin = _mapElementMixin2.default;\nexports.MapElementFactory = _mapElementFactory2.default;\nexports.Autocomplete = _autocomplete2.default;\nexports.MountableMixin = _mountableMixin2.default;\nexports.StreetViewPanorama = _streetViewPanorama2.default;\n\nfunction install(Vue, options) {\n  // Set defaults\n  options = _extends({\n    installComponents: true,\n    autobindAllEvents: false\n  }, options); // Update the global `GmapApi`. This will allow\n  // components to use the `google` global reactively\n  // via:\n  //   import {gmapApi} from 'vue2-google-maps'\n  //   export default {  computed: { google: gmapApi }  }\n\n  GmapApi = new Vue({\n    data: {\n      gmapApi: null\n    }\n  });\n  var defaultResizeBus = new Vue(); // Use a lazy to only load the API when\n  // a VGM component is loaded\n\n  var gmapApiPromiseLazy = makeGmapApiPromiseLazy(options);\n  Vue.mixin({\n    created: function created() {\n      this.$gmapDefaultResizeBus = defaultResizeBus;\n      this.$gmapOptions = options;\n      this.$gmapApiPromiseLazy = gmapApiPromiseLazy;\n    }\n  });\n  Vue.$gmapDefaultResizeBus = defaultResizeBus;\n  Vue.$gmapApiPromiseLazy = gmapApiPromiseLazy;\n\n  if (options.installComponents) {\n    Vue.component('GmapMap', _map2.default);\n    Vue.component('GmapMarker', _marker2.default);\n    Vue.component('GmapInfoWindow', _infoWindow2.default);\n    Vue.component('GmapPolyline', _polyline2.default);\n    Vue.component('GmapPolygon', _polygon2.default);\n    Vue.component('GmapCircle', _circle2.default);\n    Vue.component('GmapRectangle', _rectangle2.default);\n    Vue.component('GmapAutocomplete', _autocomplete2.default);\n    Vue.component('GmapPlaceInput', _placeInput2.default);\n    Vue.component('GmapStreetViewPanorama', _streetViewPanorama2.default);\n  }\n}\n\nfunction makeGmapApiPromiseLazy(options) {\n  // Things to do once the API is loaded\n  function onApiLoaded() {\n    GmapApi.gmapApi = {};\n    return window.google;\n  }\n\n  if (options.load) {\n    // If library should load the API\n    return (0, _lazyValue2.default)(function () {\n      // Load the\n      // This will only be evaluated once\n      if (typeof window === 'undefined') {\n        // server side -- never resolve this promise\n        return new Promise(function () {}).then(onApiLoaded);\n      } else {\n        return new Promise(function (resolve, reject) {\n          try {\n            window['vueGoogleMapsInit'] = resolve;\n            (0, _manager.loadGmapApi)(options.load, options.loadCn);\n          } catch (err) {\n            reject(err);\n          }\n        }).then(onApiLoaded);\n      }\n    });\n  } else {\n    // If library should not handle API, provide\n    // end-users with the global `vueGoogleMapsInit: () => undefined`\n    // when the Google Maps API has been loaded\n    var promise = new Promise(function (resolve) {\n      if (typeof window === 'undefined') {\n        // Do nothing if run from server-side\n        return;\n      }\n\n      window['vueGoogleMapsInit'] = resolve;\n    }).then(onApiLoaded);\n    return (0, _lazyValue2.default)(function () {\n      return promise;\n    });\n  }\n}\n\nfunction gmapApi() {\n  return GmapApi.gmapApi && window.google;\n}","map":{"version":3,"sources":["/Users/thomas/Documents/GitHub/projet-web/node_modules/vue2-google-maps/dist/main.js"],"names":["Object","defineProperty","exports","value","StreetViewPanorama","MountableMixin","Autocomplete","MapElementFactory","MapElementMixin","PlaceInput","Map","InfoWindow","Rectangle","Cluster","Circle","Polygon","Polyline","Marker","loadGmapApi","undefined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","install","gmapApi","_lazyValue","require","_lazyValue2","_interopRequireDefault","_manager","_marker","_marker2","_polyline","_polyline2","_polygon","_polygon2","_circle","_circle2","_rectangle","_rectangle2","_infoWindow","_infoWindow2","_map","_map2","_streetViewPanorama","_streetViewPanorama2","_placeInput","_placeInput2","_autocomplete","_autocomplete2","_mapElementMixin","_mapElementMixin2","_mapElementFactory","_mapElementFactory2","_mountableMixin","_mountableMixin2","obj","__esModule","default","GmapApi","Vue","options","installComponents","autobindAllEvents","data","defaultResizeBus","gmapApiPromiseLazy","makeGmapApiPromiseLazy","mixin","created","$gmapDefaultResizeBus","$gmapOptions","$gmapApiPromiseLazy","component","onApiLoaded","window","google","load","Promise","then","resolve","reject","loadCn","err","promise"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreetViewPanorama = exports.MountableMixin = exports.Autocomplete = exports.MapElementFactory = exports.MapElementMixin = exports.PlaceInput = exports.Map = exports.InfoWindow = exports.Rectangle = exports.Cluster = exports.Circle = exports.Polygon = exports.Polyline = exports.Marker = exports.loadGmapApi = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n// Vue component imports\n\n\nexports.install = install;\nexports.gmapApi = gmapApi;\n\nvar _lazyValue = require('./utils/lazyValue');\n\nvar _lazyValue2 = _interopRequireDefault(_lazyValue);\n\nvar _manager = require('./manager');\n\nvar _marker = require('./components/marker');\n\nvar _marker2 = _interopRequireDefault(_marker);\n\nvar _polyline = require('./components/polyline');\n\nvar _polyline2 = _interopRequireDefault(_polyline);\n\nvar _polygon = require('./components/polygon');\n\nvar _polygon2 = _interopRequireDefault(_polygon);\n\nvar _circle = require('./components/circle');\n\nvar _circle2 = _interopRequireDefault(_circle);\n\nvar _rectangle = require('./components/rectangle');\n\nvar _rectangle2 = _interopRequireDefault(_rectangle);\n\nvar _infoWindow = require('./components/infoWindow.vue');\n\nvar _infoWindow2 = _interopRequireDefault(_infoWindow);\n\nvar _map = require('./components/map.vue');\n\nvar _map2 = _interopRequireDefault(_map);\n\nvar _streetViewPanorama = require('./components/streetViewPanorama.vue');\n\nvar _streetViewPanorama2 = _interopRequireDefault(_streetViewPanorama);\n\nvar _placeInput = require('./components/placeInput.vue');\n\nvar _placeInput2 = _interopRequireDefault(_placeInput);\n\nvar _autocomplete = require('./components/autocomplete.vue');\n\nvar _autocomplete2 = _interopRequireDefault(_autocomplete);\n\nvar _mapElementMixin = require('./components/mapElementMixin');\n\nvar _mapElementMixin2 = _interopRequireDefault(_mapElementMixin);\n\nvar _mapElementFactory = require('./components/mapElementFactory');\n\nvar _mapElementFactory2 = _interopRequireDefault(_mapElementFactory);\n\nvar _mountableMixin = require('./utils/mountableMixin');\n\nvar _mountableMixin2 = _interopRequireDefault(_mountableMixin);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// HACK: Cluster should be loaded conditionally\n// However in the web version, it's not possible to write\n// `import 'vue2-google-maps/src/components/cluster'`, so we need to\n// import it anyway (but we don't have to register it)\n// Therefore we use babel-plugin-transform-inline-environment-variables to\n// set BUILD_DEV to truthy / falsy\nvar Cluster = undefined;\n\nvar GmapApi = null;\n\n// export everything\nexports.loadGmapApi = _manager.loadGmapApi;\nexports.Marker = _marker2.default;\nexports.Polyline = _polyline2.default;\nexports.Polygon = _polygon2.default;\nexports.Circle = _circle2.default;\nexports.Cluster = Cluster;\nexports.Rectangle = _rectangle2.default;\nexports.InfoWindow = _infoWindow2.default;\nexports.Map = _map2.default;\nexports.PlaceInput = _placeInput2.default;\nexports.MapElementMixin = _mapElementMixin2.default;\nexports.MapElementFactory = _mapElementFactory2.default;\nexports.Autocomplete = _autocomplete2.default;\nexports.MountableMixin = _mountableMixin2.default;\nexports.StreetViewPanorama = _streetViewPanorama2.default;\nfunction install(Vue, options) {\n  // Set defaults\n  options = _extends({\n    installComponents: true,\n    autobindAllEvents: false\n  }, options);\n\n  // Update the global `GmapApi`. This will allow\n  // components to use the `google` global reactively\n  // via:\n  //   import {gmapApi} from 'vue2-google-maps'\n  //   export default {  computed: { google: gmapApi }  }\n  GmapApi = new Vue({ data: { gmapApi: null } });\n\n  var defaultResizeBus = new Vue();\n\n  // Use a lazy to only load the API when\n  // a VGM component is loaded\n  var gmapApiPromiseLazy = makeGmapApiPromiseLazy(options);\n\n  Vue.mixin({\n    created: function created() {\n      this.$gmapDefaultResizeBus = defaultResizeBus;\n      this.$gmapOptions = options;\n      this.$gmapApiPromiseLazy = gmapApiPromiseLazy;\n    }\n  });\n  Vue.$gmapDefaultResizeBus = defaultResizeBus;\n  Vue.$gmapApiPromiseLazy = gmapApiPromiseLazy;\n\n  if (options.installComponents) {\n    Vue.component('GmapMap', _map2.default);\n    Vue.component('GmapMarker', _marker2.default);\n    Vue.component('GmapInfoWindow', _infoWindow2.default);\n    Vue.component('GmapPolyline', _polyline2.default);\n    Vue.component('GmapPolygon', _polygon2.default);\n    Vue.component('GmapCircle', _circle2.default);\n    Vue.component('GmapRectangle', _rectangle2.default);\n    Vue.component('GmapAutocomplete', _autocomplete2.default);\n    Vue.component('GmapPlaceInput', _placeInput2.default);\n    Vue.component('GmapStreetViewPanorama', _streetViewPanorama2.default);\n  }\n}\n\nfunction makeGmapApiPromiseLazy(options) {\n  // Things to do once the API is loaded\n  function onApiLoaded() {\n    GmapApi.gmapApi = {};\n    return window.google;\n  }\n\n  if (options.load) {\n    // If library should load the API\n    return (0, _lazyValue2.default)(function () {\n      // Load the\n      // This will only be evaluated once\n      if (typeof window === 'undefined') {\n        // server side -- never resolve this promise\n        return new Promise(function () {}).then(onApiLoaded);\n      } else {\n        return new Promise(function (resolve, reject) {\n          try {\n            window['vueGoogleMapsInit'] = resolve;\n            (0, _manager.loadGmapApi)(options.load, options.loadCn);\n          } catch (err) {\n            reject(err);\n          }\n        }).then(onApiLoaded);\n      }\n    });\n  } else {\n    // If library should not handle API, provide\n    // end-users with the global `vueGoogleMapsInit: () => undefined`\n    // when the Google Maps API has been loaded\n    var promise = new Promise(function (resolve) {\n      if (typeof window === 'undefined') {\n        // Do nothing if run from server-side\n        return;\n      }\n      window['vueGoogleMapsInit'] = resolve;\n    }).then(onApiLoaded);\n\n    return (0, _lazyValue2.default)(function () {\n      return promise;\n    });\n  }\n}\n\nfunction gmapApi() {\n  return GmapApi.gmapApi && window.google;\n}"]},"metadata":{},"sourceType":"script"}