{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = WatchPrimitiveProperties;\n/**\r\n * Watch the individual properties of a PoD object, instead of the object\r\n * per se. This is different from a deep watch where both the reference\r\n * and the individual values are watched.\r\n *\r\n * In effect, it throttles the multiple $watch to execute at most once per tick.\r\n */\n\nfunction WatchPrimitiveProperties(vueInst, propertiesToTrack, handler) {\n  var immediate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var isHandled = false;\n\n  function requestHandle() {\n    if (!isHandled) {\n      isHandled = true;\n      vueInst.$nextTick(function () {\n        isHandled = false;\n        handler();\n      });\n    }\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = propertiesToTrack[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var prop = _step.value;\n      vueInst.$watch(prop, requestHandle, {\n        immediate: immediate\n      });\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}","map":{"version":3,"sources":["/Users/thomas/Documents/GitHub/projet-web/node_modules/vue2-google-maps/dist/utils/WatchPrimitiveProperties.js"],"names":["Object","defineProperty","exports","value","default","WatchPrimitiveProperties","vueInst","propertiesToTrack","handler","immediate","arguments","length","undefined","isHandled","requestHandle","$nextTick","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","Symbol","iterator","_step","next","done","prop","$watch","err","return"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,wBAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,wBAAT,CAAkCC,OAAlC,EAA2CC,iBAA3C,EAA8DC,OAA9D,EAAuE;AACrE,MAAIC,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAApF;AAEA,MAAIG,SAAS,GAAG,KAAhB;;AAEA,WAASC,aAAT,GAAyB;AACvB,QAAI,CAACD,SAAL,EAAgB;AACdA,MAAAA,SAAS,GAAG,IAAZ;AACAP,MAAAA,OAAO,CAACS,SAAR,CAAkB,YAAY;AAC5BF,QAAAA,SAAS,GAAG,KAAZ;AACAL,QAAAA,OAAO;AACR,OAHD;AAID;AACF;;AAED,MAAIQ,yBAAyB,GAAG,IAAhC;AACA,MAAIC,iBAAiB,GAAG,KAAxB;AACA,MAAIC,cAAc,GAAGN,SAArB;;AAEA,MAAI;AACF,SAAK,IAAIO,SAAS,GAAGZ,iBAAiB,CAACa,MAAM,CAACC,QAAR,CAAjB,EAAhB,EAAsDC,KAA3D,EAAkE,EAAEN,yBAAyB,GAAG,CAACM,KAAK,GAAGH,SAAS,CAACI,IAAV,EAAT,EAA2BC,IAAzD,CAAlE,EAAkIR,yBAAyB,GAAG,IAA9J,EAAoK;AAClK,UAAIS,IAAI,GAAGH,KAAK,CAACnB,KAAjB;AAEAG,MAAAA,OAAO,CAACoB,MAAR,CAAeD,IAAf,EAAqBX,aAArB,EAAoC;AAAEL,QAAAA,SAAS,EAAEA;AAAb,OAApC;AACD;AACF,GAND,CAME,OAAOkB,GAAP,EAAY;AACZV,IAAAA,iBAAiB,GAAG,IAApB;AACAC,IAAAA,cAAc,GAAGS,GAAjB;AACD,GATD,SASU;AACR,QAAI;AACF,UAAI,CAACX,yBAAD,IAA8BG,SAAS,CAACS,MAA5C,EAAoD;AAClDT,QAAAA,SAAS,CAACS,MAAV;AACD;AACF,KAJD,SAIU;AACR,UAAIX,iBAAJ,EAAuB;AACrB,cAAMC,cAAN;AACD;AACF;AACF;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = WatchPrimitiveProperties;\n/**\r\n * Watch the individual properties of a PoD object, instead of the object\r\n * per se. This is different from a deep watch where both the reference\r\n * and the individual values are watched.\r\n *\r\n * In effect, it throttles the multiple $watch to execute at most once per tick.\r\n */\nfunction WatchPrimitiveProperties(vueInst, propertiesToTrack, handler) {\n  var immediate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  var isHandled = false;\n\n  function requestHandle() {\n    if (!isHandled) {\n      isHandled = true;\n      vueInst.$nextTick(function () {\n        isHandled = false;\n        handler();\n      });\n    }\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = propertiesToTrack[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var prop = _step.value;\n\n      vueInst.$watch(prop, requestHandle, { immediate: immediate });\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}"]},"metadata":{},"sourceType":"script"}